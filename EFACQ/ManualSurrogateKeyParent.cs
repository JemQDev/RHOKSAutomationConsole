// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace RHOKSAutomationConsole.EFACQ;

/// <summary>
/// Details parent fields inherited by a child table from a parent table via a manually defined surrogate key relationship.  Note: This is a pragmatic design that may be expanded to become more generic in the future; MC-11669.
/// </summary>
public partial class ManualSurrogateKeyParent
{
    /// <summary>
    /// The schema of the child table.
    /// </summary>
    public string TableSchema { get; set; }

    /// <summary>
    /// The name of the child table.
    /// </summary>
    public string TableName { get; set; }

    /// <summary>
    /// The name of the surrogate key field.
    /// </summary>
    public string SurrogateKeyFieldName { get; set; }

    /// <summary>
    /// The name of the constraint defining uniqueness where it&apos;s automated rather than manual. Mutually exclusive with SurrogateKeyFieldName and ParentManualCompoundUniquenessId since the unique constraint will define the relevant columns and their foreign keys will define the relationship path.
    /// </summary>
    public string UniquenessConstraintName { get; set; }

    /// <summary>
    /// Whether or not to prefix the field name with the source compound name.
    /// </summary>
    public bool IncludeCompoundNamePrefix { get; set; }

    /// <summary>
    /// The name of the compound to which the uniqueness belongs.
    /// </summary>
    public string CompoundName { get; set; }

    /// <summary>
    /// The internal name of the uniqueness. Required for unique keys as there may be more than 1 per compound. Should correspond to the SQL Server key name if it exists.
    /// </summary>
    public string UniquenessName { get; set; }

    /// <summary>
    /// The data source which the details of this record were primarily obtained from.
    /// </summary>
    public string DataSourceName { get; set; }

    public virtual DataSource DataSourceNameNavigation { get; set; }

    public virtual ManualCompoundUniqueness ManualCompoundUniqueness { get; set; }
}