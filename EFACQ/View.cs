// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace RHOKSAutomationConsole.EFACQ;

/// <summary>
/// Details information pertaining to a saved View.
/// </summary>
public partial class View
{
    /// <summary>
    /// The auto incrementing integer primary key.
    /// </summary>
    public int ViewId { get; set; }

    /// <summary>
    /// The Label for the View.
    /// </summary>
    public string Label { get; set; }

    /// <summary>
    /// The Canvas that this view belongs to.
    /// </summary>
    public int? CanvasId { get; set; }

    /// <summary>
    /// The Creator of the View.
    /// </summary>
    public int? CreatorId { get; set; }

    /// <summary>
    /// The xml data comprising the View.
    /// </summary>
    public string ViewData { get; set; }

    /// <summary>
    /// Flag indicating whether this view is available for viewing in a web application.
    /// </summary>
    public bool IsWebEnabled { get; set; }

    /// <summary>
    /// The data source which the details of this record were primarily obtained from.
    /// </summary>
    public short DataSourceId { get; set; }

    /// <summary>
    /// Comma separated tags identifying the purpose of the view to allow simple searches.
    /// </summary>
    public string Tags { get; set; }

    /// <summary>
    /// A globally unique identifier which can be used to identify the view, even if it is copied or moved between databases.
    /// </summary>
    public Guid ViewGlobalId { get; set; }

    /// <summary>
    /// A flag specifying whether or not the record should be able to be updated.
    /// </summary>
    public bool IsReadOnly { get; set; }

    public virtual ICollection<AdmViewCompoundCompound> AdmViewCompoundCompound { get; set; } = new List<AdmViewCompoundCompound>();

    public virtual Canvas Canvas { get; set; }

    public virtual User Creator { get; set; }

    public virtual DataSource DataSource { get; set; }

    public virtual MigratedViewPropertyObject MigratedViewPropertyObject { get; set; }

    public virtual ICollection<ViewCompound> ViewCompound { get; set; } = new List<ViewCompound>();

    public virtual ICollection<UserObjectCategory> UserObjectCategory { get; set; } = new List<UserObjectCategory>();
}