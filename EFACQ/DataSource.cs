// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace RHOKSAutomationConsole.EFACQ;

/// <summary>
/// Defines which sources data can be sourced from to populate the meta system tables.
/// </summary>
public partial class DataSource
{
    /// <summary>
    /// The auto incrementing integer primary key.
    /// </summary>
    public short DataSourceId { get; set; }

    /// <summary>
    /// The data source name.
    /// </summary>
    public string Name { get; set; }

    /// <summary>
    /// Whether or not this data source is the pre-defined manual data source. There can only be one.
    /// </summary>
    public bool IsManual { get; set; }

    public virtual ICollection<Compound> Compound { get; set; } = new List<Compound>();

    public virtual ICollection<CompoundAttribute> CompoundAttribute { get; set; } = new List<CompoundAttribute>();

    public virtual ICollection<CompoundField> CompoundField { get; set; } = new List<CompoundField>();

    public virtual ICollection<DatabaseTable> DatabaseTable { get; set; } = new List<DatabaseTable>();

    public virtual ICollection<FieldType> FieldType { get; set; } = new List<FieldType>();

    public virtual ICollection<ManualCompoundUniqueness> ManualCompoundUniqueness { get; set; } = new List<ManualCompoundUniqueness>();

    public virtual ICollection<ManualEqualityRelationship> ManualEqualityRelationship { get; set; } = new List<ManualEqualityRelationship>();

    public virtual ICollection<ManualSurrogateKeyParent> ManualSurrogateKeyParent { get; set; } = new List<ManualSurrogateKeyParent>();

    public virtual ICollection<Range> Range { get; set; } = new List<Range>();

    public virtual ICollection<Relationship> Relationship { get; set; } = new List<Relationship>();

    public virtual ICollection<UserObjectCategory> UserObjectCategory { get; set; } = new List<UserObjectCategory>();

    public virtual ICollection<View> View { get; set; } = new List<View>();

    public virtual ICollection<VirtualField> VirtualField { get; set; } = new List<VirtualField>();
}