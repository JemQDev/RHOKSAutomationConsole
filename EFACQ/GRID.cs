// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace RHOKSAutomationConsole.EFACQ;

/// <summary>
/// Each sample collected (either DRILLHOLE or GEOCHEM) should be located in space (preferably in 3D space). The coordinates of a point can be stored in: If the HoleID of a point has a defined GridName in HoleLocation, then the coordinates must fit within the parameters of the grid before the record can be saved. 
/// </summary>
public partial class GRID
{
    public string GRIDNAME { get; set; }

    public double? GRIDAZIMUTH { get; set; }

    public double? MINEAST { get; set; }

    public double? MINNORTH { get; set; }

    public double? MINRL { get; set; }

    public double? MAXEAST { get; set; }

    public double? MAXNORTH { get; set; }

    public double? MAXRL { get; set; }

    public string GRIDDATE { get; set; }

    public string COORDSYSTEM { get; set; }

    public double? STATIONSPACING { get; set; }

    public double? LINESPACING { get; set; }

    public string COMMENTS { get; set; }

    public int? GENERATION { get; set; }

    public string GRIDTYPE { get; set; }

    public string PARENTGRIDNAME { get; set; }

    public string TRANSFORMATIONTYPE { get; set; }

    public string PROJECTION { get; set; }

    public string LOCALDATUMTRANSFORM { get; set; }

    public double? ROTATIONANGLE { get; set; }

    public double? SCALE { get; set; }

    public string VERTICALUNITS { get; set; }

    public virtual ICollection<GDCOORDINATESET> GDCOORDINATESET { get; set; } = new List<GDCOORDINATESET>();

    public virtual GDGRIDTYPE GRIDTYPENavigation { get; set; }

    public virtual ICollection<HOLELOCATION> HOLELOCATION { get; set; } = new List<HOLELOCATION>();

    public virtual ICollection<HOLESURVEY> HOLESURVEY { get; set; } = new List<HOLESURVEY>();

    public virtual GDLOCALDATUMTRANSFORM LOCALDATUMTRANSFORMNavigation { get; set; }

    public virtual GDPROJECTION PROJECTIONNavigation { get; set; }

    public virtual ICollection<SAMPLE> SAMPLE { get; set; } = new List<SAMPLE>();

    public virtual ICollection<SURVEYAZIMUTH> SURVEYAZIMUTH { get; set; } = new List<SURVEYAZIMUTH>();

    public virtual GDTRANSFORMATIONTYPE TRANSFORMATIONTYPENavigation { get; set; }

    public virtual GDUNITS VERTICALUNITSNavigation { get; set; }
}