// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace RHOKSAutomationConsole.EFACQ;

public partial class QV_AC_ACTIVITYANDCONTRACTDETAILS_RO
{
    /// <summary>
    /// The unique identifier of the company that is the contractor associated with this contract.
    /// </summary>
    public string COMPANYCODE { get; set; }

    /// <summary>
    /// The unique identifier for this instance of the contract.
    /// </summary>
    public string CONTRACTCODE { get; set; }

    /// <summary>
    /// The unique identifier for the contract category into which the report&apos;s contract must fall. This ties all this report&apos;s items to this category of contract.
    /// </summary>
    public string CONTRACTCATEGORYCODE { get; set; }

    /// <summary>
    /// The unique identifier for the job to which the contract has been assigned.
    /// </summary>
    public string JOBCODE { get; set; }

    /// <summary>
    /// The date from which this instance of the contract is effective.
    /// </summary>
    public DateTime CONTRACTSTARTDATE { get; set; }

    /// <summary>
    /// The date up to which this instance of the contract is effective.
    /// </summary>
    public DateTime? CONTRACTENDDATE { get; set; }

    /// <summary>
    /// The date up to which this instance of the contract is active.
    /// </summary>
    public DateTime? INACTIVEFROMDATE { get; set; }

    /// <summary>
    /// A calculated end date taking account of the contract end date, the inactive date and the start date of any following contract instance. If there is no contract end date or inactive date, it is the day before the start of the next contiguous Contract, by COMPANYCODE and CONTRACTPURPOSECODE.
    /// </summary>
    public DateTime? EFFECTIVEENDDATE { get; set; }

    /// <summary>
    /// A rate associated with the contract item.
    /// </summary>
    public double? CONTRACTRATE { get; set; }

    /// <summary>
    /// The unique identifier for the top level of the contract item type that effectively identifies the whole contract item type hierarchy.
    /// </summary>
    public string TOPLEVELCONTRACTITEMTYPECODE { get; set; }

    /// <summary>
    /// The unique identifier for the actual contract item type.
    /// </summary>
    public string CONTRACTITEMTYPECODE { get; set; }

    /// <summary>
    /// The level of the contract item type within the hierarchy.
    /// </summary>
    public int? CONTRACTITEMTYPELEVEL { get; set; }

    /// <summary>
    /// Whether or not the contract item type is defined for range data.
    /// </summary>
    public byte? ISRANGEDATA { get; set; }

    /// <summary>
    /// The value used for contract item types that are defined for point data rather than range data.
    /// </summary>
    public double? CONTRACTITEMTYPESINGLEVALUE { get; set; }

    /// <summary>
    /// The value used for contract item types that expect text data.
    /// </summary>
    public string CONTRACTITEMTYPETEXTVALUE { get; set; }

    /// <summary>
    /// The start of a range used for contract item types that are defined for range data.
    /// </summary>
    public double? CONTRACTITEMTYPESTARTVALUE { get; set; }

    /// <summary>
    /// The end of a range used for contract item types that are defined for range data.
    /// </summary>
    public double? CONTRACTITEMTYPEENDVALUE { get; set; }

    /// <summary>
    /// The units used by the contract item type.
    /// </summary>
    public string CONTRACTITEMTYPEUNITS { get; set; }

    /// <summary>
    /// The unique identifying name for the group in which the contract item type is grouped.
    /// </summary>
    public string CONTRACTITEMTYPEGROUPNAME { get; set; }

    /// <summary>
    /// A cost code associated with the activity report item.
    /// </summary>
    public string COSTCODE { get; set; }

    /// <summary>
    /// Bit flag to identify contract item types that can be charged pro rata.
    /// </summary>
    public byte? CANPRORATA { get; set; }

    /// <summary>
    /// The unique identifier, within the contractor company, to identify the activity report.
    /// </summary>
    public string ACTIVITYREPORTCODE { get; set; }

    /// <summary>
    /// The date of the activity report.
    /// </summary>
    public DateTime? ACTIVITYREPORTDATE { get; set; }

    /// <summary>
    /// The unique identifier for piece of equipment associated with the activity report.
    /// </summary>
    public string ACTIVITYREPORTEQUIPMENTCODE { get; set; }

    /// <summary>
    /// The uniquely identifying name of a shift associated with the activity report.
    /// </summary>
    public string SHIFT { get; set; }

    /// <summary>
    /// Uniquely identifies the specific item within the activity report identified by COMPANYCODE and REPORTCODE.
    /// </summary>
    public int? ITEMNUMBER { get; set; }

    /// <summary>
    /// The date and time that an activity started or a cost was incurred.
    /// </summary>
    public DateTime? ACTIVITYREPORTITEMSTARTDATETIME { get; set; }

    /// <summary>
    /// The date and time that an activity ended.
    /// </summary>
    public DateTime? ACTIVITYREPORTITEMENDDATETIME { get; set; }

    /// <summary>
    /// The duration of an activity. This is a separate field from ACTIVITYREPORTITEMSTARTDATETIME and ACTIVITYREPORTITEMENDDATETIME which is not calculated from their vaules.
    /// </summary>
    public decimal? ACTIVITYREPORTITEMACTIVITYHOURS { get; set; }

    /// <summary>
    /// The value associated with the report item when the contract item type is defined for point data rather than range data.
    /// </summary>
    public double? ACTIVITYREPORTSINGLEVALUE { get; set; }

    /// <summary>
    /// The start of a range value associated with the report item when the contract item type is defined for range data.
    /// </summary>
    public double? ACTIVITYREPORTSTARTVALUE { get; set; }

    /// <summary>
    /// The end of a range value associated with the report item when the contract item type is defined for range data.
    /// </summary>
    public double? ACTIVITYREPORTENDVALUE { get; set; }

    /// <summary>
    /// With PROJECTCODE, the unique identifier for a hole related to the activity report item.
    /// </summary>
    public string ACTIVITYREPORTITEMHOLEID { get; set; }

    /// <summary>
    /// With HOLEID, the unique identifier for a hole related to the activity report item.
    /// </summary>
    public string ACTIVITYREPORTITEMPROJECTCODE { get; set; }

    /// <summary>
    /// The value of the contract item. Used for contract item types that are defined for point data rather than range data.
    /// </summary>
    public double? PARAMSINGLEVALUE { get; set; }

    /// <summary>
    /// The value of the contract item. Used for contract item types that expect text data.
    /// </summary>
    public string PARAMTEXTVALUE { get; set; }

    /// <summary>
    /// The start of a range of values for the contract item.  Used for contract item types that are defined for range data.
    /// </summary>
    public double? PARAMSTARTVALUE { get; set; }

    /// <summary>
    /// The end of a range of values for the contract item.  Used for contract item types that are defined for range data.
    /// </summary>
    public double? PARAMENDVALUE { get; set; }

    /// <summary>
    /// A description of the Job.
    /// </summary>
    public string JOBDESCRIPTION { get; set; }

    /// <summary>
    /// A description of the predefined contract item type.
    /// </summary>
    public string CONTRACTITEMTYPEDESCRIPTION { get; set; }
}