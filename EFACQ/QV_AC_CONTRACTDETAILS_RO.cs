// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace RHOKSAutomationConsole.EFACQ;

public partial class QV_AC_CONTRACTDETAILS_RO
{
    /// <summary>
    /// The unique identifier of the company that is the contractor associated with this contract.
    /// </summary>
    public string COMPANYCODE { get; set; }

    /// <summary>
    /// The unique identifier for this instance of the contract.
    /// </summary>
    public string CONTRACTCODE { get; set; }

    /// <summary>
    /// The date from which this instance of the contract is effective.
    /// </summary>
    public DateTime CONTRACTSTARTDATE { get; set; }

    /// <summary>
    /// The date up to which this instance of the contract is effective.
    /// </summary>
    public DateTime? CONTRACTENDDATE { get; set; }

    /// <summary>
    /// The date up to which this instance of the contract is active.
    /// </summary>
    public DateTime? INACTIVEFROMDATE { get; set; }

    /// <summary>
    /// The unique identifier for the contract category into which the report&apos;s contract must fall. This ties all this report&apos;s items to this category of contract.
    /// </summary>
    public string CONTRACTCATEGORYCODE { get; set; }

    /// <summary>
    /// A calculated end date taking account of the contract end date and inactive date and the start date of any following contract instance.
    /// </summary>
    public DateTime? EFFECTIVEENDDATE { get; set; }

    /// <summary>
    /// A rate associated with the contract item.
    /// </summary>
    public double? CONTRACTRATE { get; set; }

    /// <summary>
    /// A unique identifier for the top level of the contract item type that effectively identifies the whole contract item type hierarchy.
    /// </summary>
    public string TOPLEVELCONTRACTITEMTYPECODE { get; set; }

    /// <summary>
    /// A unique identifier for the actual contract item type.
    /// </summary>
    public string CONTRACTITEMTYPECODE { get; set; }

    /// <summary>
    /// The level of the contract item type within the hierarchy.
    /// </summary>
    public int? CONTRACTITEMTYPELEVEL { get; set; }

    /// <summary>
    /// Whether or not the contract item type is defined for range data.
    /// </summary>
    public byte? ISRANGEDATA { get; set; }

    /// <summary>
    /// The value used for contract item types that are defined for point data rather than range data.
    /// </summary>
    public double? SINGLEVALUE { get; set; }

    /// <summary>
    /// The value used for contract item types that expect text data.
    /// </summary>
    public string TEXTVALUE { get; set; }

    /// <summary>
    /// The start of a range used for contract item types that are defined for range data.
    /// </summary>
    public double? STARTVALUE { get; set; }

    /// <summary>
    /// The end of a range used for contract item types that are defined for range data.
    /// </summary>
    public double? ENDVALUE { get; set; }

    /// <summary>
    /// The units used by the contract item type.
    /// </summary>
    public string UNITS { get; set; }

    /// <summary>
    /// The unique identifying name for the contract item type group of the contract item type.
    /// </summary>
    public string GROUPNAME { get; set; }

    /// <summary>
    /// Bit flag to identify contract item types that can be charged pro rata.
    /// </summary>
    public byte? CANPRORATA { get; set; }

    /// <summary>
    /// A description of the contract item type.
    /// </summary>
    public string CONTRACTITEMTYPEDESCRIPTION { get; set; }
}