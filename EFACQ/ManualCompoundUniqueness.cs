// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace RHOKSAutomationConsole.EFACQ;

/// <summary>
/// Details manually defined values for compound uniqnenesses.
/// </summary>
public partial class ManualCompoundUniqueness
{
    /// <summary>
    /// The name of the compound to which the uniqueness belongs.
    /// </summary>
    public string CompoundName { get; set; }

    /// <summary>
    /// The internal name of the uniqueness. Required for unique keys as there may be more than 1 per compound. Should correspond to the SQL Server key name if it exists.
    /// </summary>
    public string UniquenessName { get; set; }

    /// <summary>
    /// Is this unique key the primary key.
    /// </summary>
    public bool IsPrimaryKey { get; set; }

    /// <summary>
    /// Whether or not this uniqueness should be the uniqueness used to uniquely identify records in this compound by the system. Generally this is the primary key, but could be a unique key in the absence of a primary key.
    /// </summary>
    public bool IsUniqueId { get; set; }

    /// <summary>
    /// Whether or not this uniqueness represents the physical order of the data in the underlying table (i.e. whether or not it is the clustered index).
    /// </summary>
    public bool IsPhysicalOrder { get; set; }

    /// <summary>
    /// Whether or not this uniqueness represents the natural key of the data in the compound. Generally this will be the same as the primary and unique key, except when a surrogate key system is in use.
    /// </summary>
    public bool IsNaturalKey { get; set; }

    /// <summary>
    /// The name of the data source.
    /// </summary>
    public string DataSourceName { get; set; }

    /// <summary>
    /// For all records where this condition is true the uniqueness is enforced.
    /// </summary>
    public string FilterCondition { get; set; }

    /// <summary>
    /// Whether or not this uniqueness represents the global identifier of the data in the compound. Generally this will be the same as the primary and unique key, except when a surrogate key system is in use.
    /// </summary>
    public bool IsGlobalId { get; set; }

    public virtual DataSource DataSourceNameNavigation { get; set; }

    public virtual ICollection<ManualCompoundUniquenessField> ManualCompoundUniquenessField { get; set; } = new List<ManualCompoundUniquenessField>();

    public virtual ICollection<ManualSurrogateKeyParent> ManualSurrogateKeyParent { get; set; } = new List<ManualSurrogateKeyParent>();
}