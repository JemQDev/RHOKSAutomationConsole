// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace RHOKSAutomationConsole.EFACQ;

/// <summary>
/// Allows manual configuration of virtual field systems.
/// </summary>
public partial class ManualVirtualFieldTable
{
    /// <summary>
    /// The auto incrementing primary key.
    /// </summary>
    public int ManualVirtualFieldTableId { get; set; }

    /// <summary>
    /// The schema of the table containing the virtual field values.
    /// </summary>
    public string ValueColumnTableSchema { get; set; }

    /// <summary>
    /// The table containing the virtual field values.
    /// </summary>
    public string ValueColumnTableName { get; set; }

    /// <summary>
    /// The column containing the virtual field values.
    /// </summary>
    public string ValueColumnName { get; set; }

    /// <summary>
    /// The schema of the table containing the virtual field codes.
    /// </summary>
    public string CodeColumnTableSchema { get; set; }

    /// <summary>
    /// The table containing the virtual field codes.
    /// </summary>
    public string CodeColumnTableName { get; set; }

    /// <summary>
    /// The column containing the virtual field codes.
    /// </summary>
    public string CodeColumnName { get; set; }

    /// <summary>
    /// The column containing the type of the data held by the virtual field.
    /// </summary>
    public string DataTypeColumnName { get; set; }

    /// <summary>
    /// The standard Mica data type of the type of the data held by the virtual field. If it is supplied, this will be applied in precedence of DataTypeColumnName.
    /// </summary>
    public string DefaultMicaDataType { get; set; }

    /// <summary>
    /// Is the parent virtual field value compulsory when trying to determine this virtual field.
    /// </summary>
    public bool IsParentCompulsory { get; set; }

    /// <summary>
    /// The data source which the details of this record were primarily obtained from.
    /// </summary>
    public short DataSourceId { get; set; }

    /// <summary>
    /// Whether the virtual field should be read only.
    /// </summary>
    public bool IsReadOnly { get; set; }
}